on_actions = {
	on_startup = {
		effect = {
			###PARLIAMENT SETUP - Make sure to add an entry below for a country getting cusom content
			#Make sure that each country has seats assigned to all 8 ideologies, even if some of them have 0 seats
			every_country = {
				add_to_array = { parliament_seat_array = party_popularity_100@anarchism_ideology } # Anarchism
				add_to_array = { parliament_seat_array = party_popularity_100@totalism_ideology } # Totalism
				add_to_array = { parliament_seat_array = party_popularity_100@socialism_ideology } # Socialism
				add_to_array = { parliament_seat_array = party_popularity_100@social_democracy_ideology } # Social Democracy
				add_to_array = { parliament_seat_array = party_popularity_100@liberalism_ideology } # Liberalism
				add_to_array = { parliament_seat_array = party_popularity_100@conservatism_ideology } # Conservatism
				add_to_array = { parliament_seat_array = party_popularity_100@authoritarianism_ideology } # Authoritarianism
				add_to_array = { parliament_seat_array = party_popularity_100@ultranationalism_ideology } # Ultranationalism
				d_parliament_gui_initial = yes

				initialize_parties_array = yes

				set_country_flag = show_government_info

				set_temp_variable = { anarchist_seat_change = 0 }
				set_temp_variable = { totalist_seat_change = 0 }
				set_temp_variable = { socialist_seat_change = 0 }
				set_temp_variable = { social_democrat_seat_change = 0 }
				set_temp_variable = { liberal_seat_change = 0 }
				set_temp_variable = { conservative_seat_change = 0 }
				set_temp_variable = { authoritarian_seat_change = 0 }
				set_temp_variable = { ultranationalist_seat_change = 0 }
			}

			###CORPORATIONS###
			#Generic corporations are automatically added for countries with no custom content
			every_country = {
				if = {
					limit = { has_government = liberalism_ideology }
					set_variable = {
						var = corp_investment_cost_var
						value = 14
					}
				}
				else = {
					set_variable = {
						var = corp_investment_cost_var
						value = 29
					}
				}

				set_variable = {
					var = current_investment_points
					value = 0
				}

				set_variable = {
					var = total_investment_points
					value = 0
				}

				set_variable = {
					var = spent_investment_points
					value = 0
				}

				#All countries need this, regardless of custom content. There MUST BE 5 entries.
				add_to_array = { circle_grid = 0 }
				add_to_array = { circle_grid = 0 }
				add_to_array = { circle_grid = 0 }
				add_to_array = { circle_grid = 0 }
				add_to_array = { circle_grid = 0 }

				#IDs are assigned to each corporation. IDs MUST BE UNIQUE ACROSS THE ENTIRE MOD!! Check Documentation for a list of all Corporation IDs.
				add_to_array = { corporations_array = 1 } #Generic Construction Corporation
				add_to_array = { corporations_array = 2 } #Generic Electronics Corporation
				add_to_array = { corporations_array = 3 } #Generic Arms Corporation
				add_to_array = { corporations_array = 4 } #Generic Artillery Corporation
				add_to_array = { corporations_array = 5 } #Generic Truck Corporation
				add_to_array = { corporations_array = 6 } #Generic Aircraft Corporation
				add_to_array = { corporations_array = 7 } #Generic Shipbuilding Corporation
				add_to_array = { corporations_array = 8 } #Generic Tank Corporation

				#Investment quantity (from 0 - 5) is tracked by this array. The index for each entry MUST MATCH those of the corporation's ID.
				add_to_array = { investment_array = 0 } #Generic Construction Corporation
				add_to_array = { investment_array = 0 } #Generic Electronics Corporation
				add_to_array = { investment_array = 0 } #Generic Arms Corporation
				add_to_array = { investment_array = 0 } #Generic Artillery Corporation
				add_to_array = { investment_array = 0 } #Generic Truck Corporation
				add_to_array = { investment_array = 0 } #Generic Aircraft Corporation
				add_to_array = { investment_array = 0 } #Generic Shipbuilding Corporation
				add_to_array = { investment_array = 0 } #Generic Tank Corporation

				#This array tracks the cost in "investment points" for each corporation. The index for each entry MUST MATCH those of the corporation's ID.
				add_to_array = { investment_point_cost_array = 1 } #Generic Construction Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Electronics Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Arms Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Artillery Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Truck Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Aircraft Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Shipbuilding Corporation
				add_to_array = { investment_point_cost_array = 1 } #Generic Tank Corporation

				#This array tracks the current benefits amount for each corporation. The index for each entry MUST MATCH those of the corporation's ID.
				add_to_array = { investment_benefits_array = 0 } #Generic Construction Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Electronics Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Arms Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Artillery Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Truck Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Aircraft Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Shipbuilding Corporation
				add_to_array = { investment_benefits_array = 0 } #Generic Tank Corporation

				#This array tracks the scaling of benefits amount for each corporation. Values typically should NOT change. The index for each entry MUST MATCH those of the corporation's ID.
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Construction Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Electronics Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Arms Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Artillery Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Truck Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Aircraft Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Shipbuilding Corporation
				add_to_array = { investment_benefits_scaling_array = 0.03 } #Generic Tank Corporation
			}

			#CHECKS STARTING IDEAS AND APPLIES TAX VARIABLE AND DIVISION LIMIT VARIABLE OPERATIONS (on_add effects do not fire for ideas added in history files or in an on_startup block)
			every_country = {
				#Division Limit Initialization
				set_variable = { standing_army_limit = 0 }
				set_variable = { division_limit_x_position = 23 }

				#Tax Rate
				if = {
					limit = { has_idea = very_low_tax_rate }
					tax_revenue_increase_3 = yes
				}
				else_if = {
					limit = { has_idea = low_tax_rate }
					tax_revenue_increase_6 = yes
				}
				else_if = {
					limit = { has_idea = medium_tax_rate }
					tax_revenue_increase_9 = yes
				}
				else_if = {
					limit = { has_idea = high_tax_rate }
					tax_revenue_increase_12 = yes
				}
				else_if = {
					limit = { has_idea = very_high_tax_rate }
					tax_revenue_increase_15 = yes
				}

				#Ideology
				if = {
					limit = { has_government = social_democracy_ideology }
					add_ideas = social_democracy_idea
				}

				#Government Type
				if = {
					limit = { has_country_flag = is_colonial_government }
					tax_revenue_decrease_1 = yes
				}

				#Industrialization
				if = {
					limit = { has_idea = early_industrialization }
					tax_revenue_increase_2 = yes
					standing_army_increase_6 = yes
				}
				else_if = {
					limit = { has_idea = modern_industrialization }
					tax_revenue_increase_4 = yes
					standing_army_increase_12 = yes
				}
				else_if = {
					limit = { has_idea = advanced_industrialization }
					tax_revenue_increase_6 = yes
					standing_army_increase_18 = yes
				}
				else_if = {
					limit = { has_idea = peak_industrialization }
					tax_revenue_increase_8 = yes
					standing_army_increase_24 = yes
				}

				#Mobilization
				if = {
					limit = { 
						OR = {
							has_idea = undisturbed_isolation 
							has_idea = isolation
							has_idea = civilian_economy
						}
					}
					standing_army_increase_6 = yes
				}
				else_if = {
					limit = { has_idea = low_economic_mobilisation }
					standing_army_increase_24 = yes
				}
				else_if = {
					limit = { has_idea = partial_economic_mobilisation }
					standing_army_increase_48 = yes
				}

				#Development Focus
				if = {
					limit = { has_idea = urban_focus }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = suburban_focus }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = rural_focus }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = capitol_focus }
					tax_revenue_decrease_1 = yes
				}

				#Colonial Policy
				if = {
					limit = { has_idea = colonial_synergy }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = colonial_development }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = colonial_troops }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = tax_the_natives }
					tax_revenue_increase_2 = yes
				}
				else_if = {
					limit = { has_idea = colonial_exploitation }
					tax_revenue_increase_2 = yes
				}

				#Tax System
				if = {
					limit = { has_idea = set_maximum_income }
					tax_revenue_increase_4 = yes
				}
				else_if = {
					limit = { has_idea = wealth_tax }
					tax_revenue_increase_2 = yes
				}
				else_if = {
					limit = { has_idea = flat_tax_rate }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = no_wealth_tax }
					tax_revenue_decrease_4 = yes
				}

				#Natural Resources
				if = {
					limit = { has_idea = state_ownership }
					tax_revenue_increase_1 = yes
				}

				#Immigration
				if = {
					limit = { has_idea = closed_borders }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = refugees_only }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = limited_immigration }
					tax_revenue_decrease_1 = yes
				}

				#Law Enforcement
				if = {
					limit = { has_idea = underfunded_police }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = professional_police }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = secret_police }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = police_state }
					tax_revenue_decrease_4 = yes
				}

				#Education System
				if = {
					limit = { has_idea = primary_education }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = lower_secondary_education }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = upper_secondary_education }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = free_universities }
					tax_revenue_decrease_4 = yes
				}

				#Pension System
				if = {
					limit = { has_idea = basic_pensions }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = generous_pensions }
					tax_revenue_decrease_4 = yes
				}

				#Army Funding
				if = {
					limit = { has_idea = army_poor_funding }
					tax_revenue_decrease_1 = yes
					standing_army_increase_6 = yes
				}
				else_if = {
					limit = { has_idea = army_sufficient_funding }
					tax_revenue_decrease_2 = yes
					standing_army_increase_12 = yes
				}
				else_if = {
					limit = { has_idea = army_lavish_funding }
					tax_revenue_decrease_3 = yes
					standing_army_increase_18 = yes
				}
				else_if = {
					limit = { has_idea = army_massive_funding }
					tax_revenue_decrease_4 = yes
					standing_army_increase_24 = yes
				}
				
				#Navy Funding
				if = {
					limit = { has_idea = navy_poor_funding }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = navy_sufficient_funding }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = navy_lavish_funding }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = navy_massive_funding }
					tax_revenue_decrease_4 = yes
				}

				#Air Force Funding
				if = {
					limit = { has_idea = air_poor_funding }
					tax_revenue_decrease_1 = yes
				}
				else_if = {
					limit = { has_idea = air_sufficient_funding }
					tax_revenue_decrease_2 = yes
				}
				else_if = {
					limit = { has_idea = air_lavish_funding }
					tax_revenue_decrease_3 = yes
				}
				else_if = {
					limit = { has_idea = air_massive_funding }
					tax_revenue_decrease_4 = yes
				}
			}
		}
	}

	on_ruling_party_change = {
		effect = {
			if = {
				limit = { 
					has_government = social_democracy_ideology 
					NOT = { has_idea = social_democracy_idea }
				}
				add_ideas = social_democracy_idea
			}
			if = {
				limit = { 
					NOT = { has_government = social_democracy_ideology }
					has_idea = social_democracy_idea
				}
				remove_ideas = social_democracy_idea
			}
			if = {
				limit = { 
					has_government = liberalism_ideology 
					check_variable = {
						var = corp_investment_cost_var
						value = 14
						compare = not_equals
					}
				}
				set_variable = {
					var = corp_investment_cost_var
					value = 14
				}
			}
			else_if = {
				limit = { 
					NOT = { has_government = liberalism_ideology }
					check_variable = {
						var = corp_investment_cost_var
						value = 29
						compare = not_equals
					}
				}
				set_variable = {
					var = corp_investment_cost_var
					value = 29
				}
			}
		}
	}

	on_new_term_election = {
		
	}

	on_daily = {
		effect = {
			#This helps with the Action Button/Menu
			if = {
				limit = { has_variable = cooldown_duration_remaining }
				subtract_from_variable = { cooldown_duration_remaining = 1 }
			}

			#Keeps track of how many investment points have been spentand the total investment points
			set_variable = { total_investment_points = current_investment_points }
			set_variable = { spent_investment_points = 0 }

			for_each_loop = {
				array = investment_array
                value = v
                index = i
                
                add_to_variable = { spent_investment_points = v }
			}

			add_to_variable = { total_investment_points = spent_investment_points }

			#Counts down the time until the over division limit penalty increases in severity.
			if = {
				limit = { has_variable = over_division_limit_countdown }
				subtract_from_variable = { over_division_limit_countdown = 1 }
			}

			#Check for nations being over their division limit while not at war.
			if = {
				limit = { #If true, gives warning and the initial penalty.
					has_war = no
					is_ai = no
					check_variable = {
						var = num_divisions
						value = standing_army_limit
						compare = greater_than
					}
					NOT = { 
						has_country_flag = over_division_limit 
						has_country_flag = post_war_buffer_flag
					}
				}
				set_country_flag = over_division_limit
				add_ideas = over_division_limit_tier_1
				set_variable = { over_division_limit_countdown = 7 }
				country_event = generic.26
			}
			else_if = {
				limit = { #If true, increases the penalties.
					has_war = no
					is_ai = no
					check_variable = {
						var = num_divisions
						value = standing_army_limit
						compare = greater_than
					}
					check_variable = {
						var = over_division_limit_countdown
						value = 0
						compare = less_than
					}
					has_country_flag = over_division_limit
					NOT = { has_idea = over_division_limit_tier_3 }
					NOT = { has_country_flag = post_war_buffer_flag }
				}
				if = {
					limit = { has_idea = over_division_limit_tier_1 }
					swap_ideas = {
						remove_idea = over_division_limit_tier_1
						add_idea = over_division_limit_tier_2
					}
					set_variable = { over_division_limit_countdown = 7 }
				}
				else_if = {
					limit = { has_idea = over_division_limit_tier_2 }
					swap_ideas = {
						remove_idea = over_division_limit_tier_2
						add_idea = over_division_limit_tier_3
					}
					clear_variable = over_division_limit_countdown
				}
			}
			else_if = {
				limit = { #If true, removes all penalties
					has_war = no
					is_ai = no
					check_variable = {
						var = num_divisions
						value = standing_army_limit
						compare = less_than_or_equals
					}
					has_country_flag = over_division_limit
				}
				remove_ideas = {
					over_division_limit_tier_1
					over_division_limit_tier_2
					over_division_limit_tier_3
				}
				clear_variable = over_division_limit_countdown
				clr_country_flag = over_division_limit
				country_event = generic.27
			}
			else_if = {
				limit = { #If true, removes all penalties
					is_ai = no
					has_war = yes
					has_country_flag = over_division_limit
				}
				remove_ideas = {
					over_division_limit_tier_1
					over_division_limit_tier_2
					over_division_limit_tier_3
				}
				clear_variable = over_division_limit_countdown
				clr_country_flag = over_division_limit
				country_event = generic.28
			}

			#Adjust the position of the division limit info on the topbar if the value is negative (this prevents the number from clipping outside its area.)
			set_temp_variable = { temp_available_divisions = standing_army_limit }
			set_temp_variable = { temp_number_divisions = num_divisions }
			subtract_from_temp_variable = { temp_available_divisions = temp_number_divisions }
			if = {
				limit = {
					check_variable = {
						var = temp_available_divisions
						value = 0
						compare = less_than
					}
				}
				set_variable = { division_limit_x_position = 20 }
			}
			else = {
				set_variable = { division_limit_x_position = 23 }
			}
		}
	}

	on_war = {
		effect = {
			set_country_flag = post_war_buffer_flag #This prevents the player from being hit with negative modifiers for being over their division limit at the very end of a war. This buffer lasts until the player picks an option from event generic.29 (an option will be automatically chosen 13 days after receiving the event, meaning the player has up to 13 days from the end of a war to demobilize their military).
		}
	}

	on_peace = {
		effect = {
			country_event = generic.29
		}
	}
}